plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Spring Boot CRUD Application with RESTful APIs'

// Project Metadata
buildNumber = 123
projectOwner = 'pulak-code'
projectEmail = 'pulak.code@example.com'
buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Database
    runtimeOnly 'com.h2database:h2'
    
    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // Utilities
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Custom task to generate build info
task generateBuildInfo {
    doLast {
        def buildInfoFile = file("$buildDir/resources/main/build-info.properties")
        buildInfoFile.parentFile.mkdirs()
        buildInfoFile.text = """
build.number=${buildNumber}
build.timestamp=${buildTimestamp}
project.name=${project.name}
project.version=${project.version}
project.description=${project.description}
project.group=${project.group}
project.owner=${projectOwner}
project.email=${projectEmail}
java.version=${java.toolchain.languageVersion.get()}
        """.trim()
    }
}

// Make build info generation part of the build process
processResources.dependsOn generateBuildInfo

// Custom task to display project information
task projectInfo {
    doLast {
        println """
        Project: ${project.name} v${project.version}
        Owner: ${projectOwner}
        Build: #${buildNumber} (${buildTimestamp})
        Description: ${project.description}
        """
    }
}

// Enhanced JAR with build metadata
bootJar {
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': projectOwner,
            'Build-Number': buildNumber,
            'Build-Time': buildTimestamp
        )
    }
}
